class Person
types
public String = seq of char;
public Gender = <Masculine> | <Feminine>;

values
-- TODO Define values here
instance variables
private connections : set of Person := {};
private name : String :="";
private age : nat1 := 99;
private gender: Gender := <Masculine>;
private CV: String :="";
private skillset : set of Skill := {};
private location : String := "";
private distance : int := 0;
--it worked devolveu o caminho mais curto, só tive que alterar duas linhas
operations

public Person: String * Gender * nat1 ==> Person
Person(n, g, a) == (
name:=n;  gender:=g; age:=a;
return self;
);

public removePerson: Person ==> ()
removePerson(p) == connections := connections\{p}
pre p in set connections
post connections = connections~\{p};

public addPerson: Person ==> ()
addPerson(p) == connections := connections union {p}
pre p not in set connections
post connections = connections~ union {p};

public setLocation: String ==> ()
setLocation(loc) == location := loc
pre is_String(loc);

public addSkill: String * nat1 ==> ()
addSkill(description, evaluation) == (
dcl skill:Skill := new Skill(description, evaluation);
skillset:= skillset union {skill}
)
pre skillset <> undefined and (not exists s in set skillset & (s.getDescription() = description))
post exists s in set skillset & (s.getDescription() = description and s.getEval() = evaluation 
and skillset = skillset~ union {s});

public editSkillEvaluation: String*nat1 ==> ()
editSkillEvaluation(description, newEvaluation) == (
for all skills in set skillset do(
		if(skills.getDescription() = description) then
		skills.setEval(newEvaluation)
	)
);

public pure getName : () ==> String 
getName() == return name;

 public pure getConnections : () ==> set of Person 
getConnections() == return connections;

public pure getDistance : () ==> int
getDistance() == return distance;

public pure connectionsSize: () ==> nat
connectionsSize() == return card connections;

public setDistance : int ==> ()
setDistance(d) == distance := d;

public addCV: String ==> ()
addCV(cv) == CV:=cv;

functions
 
traces
-- TODO Define Combinatorial Test Traces here
end Person